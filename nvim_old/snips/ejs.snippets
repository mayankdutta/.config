priority -50

###########################################################################
#                            TextMate Snippets                            #
###########################################################################

global !p
def x(snip):
	if snip.ft.startswith("x"):
		snip.rv = '/'
	else:
		snip.rv = ""
endglobal

snippet doctype "HTML - 5.0 (doctype)" b
<!DOCTYPE html>

endsnippet

#############
# Shortcuts #
#############
snippet down "Down (down)"
&#x2193;
endsnippet

snippet enter "Enter (enter)"
&#x2305;
endsnippet

snippet escape "Escape (escape)"
&#x238B;
endsnippet

snippet left "Left (left)"
&#x2190;
endsnippet

snippet return "Return (return)"
&#x21A9;
endsnippet

snippet right "Right (right)"
&#x2192;
endsnippet

snippet shift "Shift (shift)"
&#x21E7;
endsnippet

snippet tab "Tab (tab)"
&#x21E5;
endsnippet

snippet up "Up (up)"
&#x2191;
endsnippet

#############
# HTML TAGS #
#############
snippet a "Link" w
<a href="${1:http://www.${2:url.com}}"${3: target="_blank"}>${4:Anchor Text}</a>
endsnippet

snippet abbr "<abbr>" w
<abbr title="$2">$1</abbr>
endsnippet

snippet access "accesskey global attribute"
accesskey="$1"
endsnippet

snippet address "<address>" w
<address>$1</address>
endsnippet

snippet article "<article>"
<article>
	${1:article content}
</article>
endsnippet

snippet aside "<aside>"
<aside>
	${1:aside content}
</aside>
endsnippet

snippet b "<b>" w
<b>$1</b>
endsnippet

snippet base "HTML <base>" w
<base href="$1"${2: target="$3"}`!p x(snip)`>
endsnippet

snippet blockquote "<blockquote>"
<blockquote>$1</blockquote>
endsnippet

snippet body "<body>"
<body>
	${0:${VISUAL}}
</body>
endsnippet

snippet br "<br>" w
<br>$1</br>
endsnippet

snippet button "<button>"
<button>$1</button>
endsnippet

snippet caption "<caption>"
<caption>$1</caption>
endsnippet

snippet cite "<cite>" w
<cite>$1</cite>
endsnippet

snippet class "class global attribute"
class="$1"
endsnippet

snippet code "<code>" w
<code>$1</code>
endsnippet

snippet data "<data>"
<data value="$2">$1</data>
endsnippet

snippet datalist "<datalist>"
<datalist id="$1" name="$2">
	opt$3
</datalist>
endsnippet

snippet dd "<dd>"
<dd>$1</dd>
endsnippet

snippet del "<del>" w
<del cite="$2" datetime="${3:`date '+%Y-%m-%dT%H:%M:%S%:z'`}">$1</del>
endsnippet

snippet dfn "<dfn>" w
<dfn>$1</dfn>
endsnippet

snippet div "<div>" w
<div>
	${0:${VISUAL}}
</div>
endsnippet

snippet div# "<div> with ID & class" w
<div`!p snip.rv=' id="' if t[1] else ""`${1:name}`!p snip.rv = '"' if t[1] else ""``!p snip.rv=' class="' if t[2] else ""`${2:name}`!p snip.rv = '"' if t[2] else ""`>
	${0:${VISUAL}}
</div>
endsnippet

snippet div. "<div> with class" w
<div`!p snip.rv=' class="' if t[1] else ""`${1:name}`!p snip.rv = '"' if t[1] else ""`>
	${0:${VISUAL}}
</div>
endsnippet

snippet dl "<dl>"
<dl>
	${1:Definition list}
</dl>
endsnippet

snippet dt "<dt>"
<dt>$1</dt>
endsnippet

snippet em "<em>" w
<em>$1</em>
endsnippet

snippet fieldset "Fieldset" w
<fieldset id="${1/[\w\d]+|( )/(?1:_:\L$0\E)/g}" ${2:class="${3:}"}>
	<legend>$1</legend>
	${0:${VISUAL}}
</fieldset>
endsnippet

snippet fig "<figure>"
<figure>
$1
<figcaption>$2</figcaption>
</figure>
endsnippet

snippet figcaption "<figcaption>"
<figcaption>$1</figcaption>
endsnippet

snippet footer "<footer>"
<footer>
	${1:footer content}
</footer>
endsnippet

snippet form "HTML <form>" w
<form action="${1:`!p
snip.rv = (snip.basename or 'unnamed') + '_submit'
`}" method="${2:get}" accept-charset="utf-8">
	${0:${VISUAL}}
</form>
endsnippet

snippet h1 "HTML <h1>" w
<h1>${0:${VISUAL}}</h1>
endsnippet

snippet h2 "HTML <h2>" w
<h2>${0:${VISUAL}}</h2>
endsnippet

snippet h3 "HTML <h3>" w
<h3>${0:${VISUAL}}</h3>
endsnippet

snippet h4 "HTML <h4>" w
<h4>${0:${VISUAL}}</h4>
endsnippet

snippet h5 "HTML <h5>" w
<h5>${0:${VISUAL}}</h5>
endsnippet

snippet h6 "HTML <h6>" w
<h6>${0:${VISUAL}}</h6>
endsnippet

snippet head "HTML <head>"
<head>
	<meta charset="utf-8">
	<title>${1:`!p snip.rv = snip.basename or "Page Title"`}</title>
	${0:${VISUAL}}
</head>
endsnippet

snippet header "<header>"
<header>
	${1:header content}
</header>
endsnippet

snippet hr "<hr>"
<hr>
endsnippet

snippet html "HTML basic structure" b
<!DOCTYPE html>
<html>
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width" />
		<title>${1:`!p snip.rv = snip.basename.replace('-', ' ').capitalize()`}</title>
	</head>
	<body>
		${0:body}
	</body>
</html>
endsnippet

snippet htmll "HTML basic structure with the lang attribute" b
<!DOCTYPE html>
<html lang="${1:es}">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width" />
		<title>${2:`!p snip.rv = snip.basename.replace('-', ' ').capitalize()`}</title>
	</head>
	<body>
		${0:body}
	</body>
</html>
endsnippet

snippet i "<i>" w
<i>$1</i>
endsnippet

snippet id "id global attribute"
id="$1"
endsnippet

snippet img "<img>"
<img src="$1" alt="$2">
endsnippet

snippet input "Input with Label" w
<label for="${2:${1/[[:alpha:]]+|( )/(?1:_:\L$0)/g}}">$1</label><input type="${3:text/submit/hidden/button}" name="${4:$2}" value="$5"${6: id="${7:$2}"}`!p x(snip)`>
endsnippet

snippet input "HTML <input>" w
<input type="${1:text/submit/hidden/button}" name="${2:some_name}" value="$3"${4: id="${5:$2}"}`!p x(snip)`>
endsnippet

snippet ins "<ins>" w
<ins cite="$2" datetime="${3:`date '+%Y-%m-%dT%H:%M:%S%:z'`}">$1</ins>
endsnippet

snippet kbd "<kbd>" w
<kbd>$1</kbd>
endsnippet

snippet label "<label>"
<label>$1</label>
endsnippet

snippet legend "<legend>"
<legend>$1</legend>
endsnippet

snippet li "list item" w
<li>${0:${VISUAL}}</li>
endsnippet

snippet link "HTML <link>" w
<link rel="${1:stylesheet}" href="${2:/css/master.css}" type="text/css" media="${3:screen}" title="${4:no title}" charset="${5:utf-8}"`!p x(snip)`>
endsnippet

snippet mailto "HTML <a mailto: >" w
<a href="mailto:${1:joe@example.com}?subject=${2:feedback}">${3:email me}</a>
endsnippet

snippet main "<main>"
<main>
	${1:main content}
</main>
endsnippet

snippet mark "<mark>"
<mark>$1</mark>
endsnippet

snippet meta "HTML <meta>" w
<meta name="${1:name}" content="${2:content}"`!p x(snip)`>
endsnippet

snippet meter "<meter>"
<meter>$1</meter>
endsnippet

snippet nav "<nav>"
<nav>
	${1:navigation links}
</nav>
endsnippet

snippet noscript "<noscript>"
<noscript>$1</noscript>
endsnippet

snippet ol "<ol>"
<ol>
	<li>$1</li>
</ol>
endsnippet

snippet optgroup "<optgroup>"
<optgroup label="$1">
	opt$2
</optgroup>
endsnippet

snippet output "<output>"
<output for="$1" name="$2">$3</output>
endsnippet

snippet option "Option" w
<option${1: value="${2:option}"}>${3:$2}</option>
endsnippet

snippet p "paragraph" w
<p>${0:${VISUAL}}</p>
endsnippet

snippet picture "<picture>"
<picture>
	${1:image sources}
</picture>
endsnippet

snippet pre "<pre>"
<pre>$1</pre>
endsnippet

snippet progress "<progress>"
<progress>$1</progress>
endsnippet

snippet q "<q>" w
<q>$1</q>
endsnippet

snippet s "<s>" w
<s>$1</s>
endsnippet

snippet samp "<samp>" w
<samp>$1</samp>
endsnippet

snippet script "HTML <script>" w
<script charset="utf-8">
	${0:${VISUAL}}
</script>
endsnippet

snippet scriptsrc "HTML <script src...>" w
<script src="$1" charset="${3:utf-8}"></script>
endsnippet

snippet select "Select Box" w
<select name="${1:some_name}" id="${2:$1}"${3:${4: multiple}${5: size="${6:1}"}}>
	${0:${VISUAL}}
</select>
endsnippet

snippet small "<small>" w
<small>$1</small>
endsnippet

snippet span "<span>" w
<span>${0:${VISUAL}}</span>
endsnippet

snippet span# "<span> with ID & class" w
<span`!p snip.rv=' id="' if t[1] else ""`${1:name}`!p snip.rv = '"' if t[1] else ""``!p snip.rv=' class="' if t[2] else ""`${2:name}`!p snip.rv = '"' if t[2] else ""`>${0:${VISUAL}}</span>
endsnippet

snippet span. "<span> with class" w
<span`!p snip.rv=' class="' if t[1] else ""`${1:name}`!p snip.rv = '"' if t[1] else ""`>${0:${VISUAL}}</span>
endsnippet

snippet strong "<strong>" w
<strong>$1</strong>
endsnippet

snippet style "HTML <style>" w
<style type="text/css" media="screen">
	${0:${VISUAL}}
</style>
endsnippet

snippet sub "<sub>" w
<sub>$1</sub>
endsnippet

snippet sup "<sup>" w
<sup>$1</sup>
endsnippet

snippet table "HTML <table>" w
<table>
	${0:${VISUAL}}
</table>
endsnippet

snippet tbody "<tbody>"
<tbody>$1</tbody>
endsnippet

snippet td "table cell" w
<td>${0:${VISUAL}}</td>
endsnippet

snippet template "<template>"
<template id="$1">
$2
</template>
endsnippet

snippet textarea "HTML <textarea>" w
<textarea name="${1:Name}" rows="${2:8}" cols="${3:40}">$0</textarea>
endsnippet

snippet tfoot "<tfoot>"
<tfoot>$1</tfoot>
endsnippet

snippet th "table header" w
<th>${0:${VISUAL}}</th>
endsnippet

snippet thead "<thead>"
<thead>$1</thead>
endsnippet

snippet time "<time>" w
<time datetime="$2">$1</time>
endsnippet

snippet title "HTML <title>" w
<title>${1:`!p snip.rv = snip.basename or "Page Title"`}</title>
endsnippet

snippet tr "table row" w
<tr>${0:${VISUAL}}</tr>
endsnippet

snippet ul "unordered list" w
<ul>
	${0:${VISUAL}}
</ul>
endsnippet

snippet var "<var>" w
<var>$1</var>
endsnippet

snippet viewport "Responsive viewport meta" w
<meta name="viewport" content="width=device-width, initial-scale=1">
endsnippet

snippet wbr "<wbr>" w
<wbr>$1</wbr>
endsnippet

# vim:ft=snippets:

priority -50

snippet p "padding"
padding: ${1:0};$0
endsnippet

snippet m "margin"
margin: ${1:0};$0
endsnippet

snippet bd "border"
border: ${1:0};$0
endsnippet

snippet d "display"
display: ${1:none};$0
endsnippet

snippet bg "background"
background: ${1:none};$0
endsnippet

snippet ff "font-family"
font-family: ${1:"Helvetica Neue", Helvetica, Arial, sans-serif};$0
endsnippet

snippet h "height"
height: ${1:auto};$0
endsnippet

snippet w "width"
width: ${1:auto};$0
endsnippet

snippet pos "position"
position: ${1:relative};$0
endsnippet

snippet tt "text-transform"
text-transform: ${1:none};$0
endsnippet

snippet ! "!important CSS (!)"
!important
endsnippet

snippet tsh "text-shadow: color-hex x y blur (text)"
text-shadow: ${1:${2:color} ${3:offset-x} ${4:offset-y} ${5:blur}};$0
endsnippet

snippet bxsh "box-shadow: color-hex x y blur (text)"
box-shadow: ${1:${2:offset-x} ${3:offset-y} ${4:blur} ${5:spread} ${6:color}};$0
endsnippet

#
# Colors
#

snippet rgb "color rgb"
rgb(${1:255}, ${2:255}, ${3:255})$0
endsnippet

snippet rgba "color rgba"
rgba(${1:255}, ${2:255}, ${3:255}, ${4:0.5})$0
endsnippet

snippet hsl "color hsl"
hsl(${1:360}, ${2:100}%, ${3:100}%)$0
endsnippet

snippet hsla "color hsla"
hsla(${1:360}, ${2:100}%, ${3:100}%, ${4:0.5})$0
endsnippet

#
# Selectors
#

snippet :fc
:first-child
endsnippet

snippet :lc
:last-child
endsnippet

snippet :nc
:nth-child($0)
endsnippet

snippet :nlc
:nth-last-child($0)
endsnippet

snippet :oc
:only-child
endsnippet

#
# Pseudo-elements
#

snippet :a
:after
endsnippet

snippet :b
:before
endsnippet

snippet ::a
::after
endsnippet

snippet ::b
::before
endsnippet

###########################################################################
#                    Most of these came from TextMate                     #
###########################################################################

snippet background "background-attachment: scroll:fixed (background)"
background-attachment: ${1:scroll/fixed};$0
endsnippet

snippet background "background-color:  color-hex (background)"
background-color: #${1:DDD};$0
endsnippet

snippet background "background-color:  color-name (background)"
background-color: ${1:red};$0
endsnippet

snippet background "background-color:  color-rgb (background)"
background-color: rgb(${1:255},${2:255},${3:255});$0
endsnippet

snippet background "background-color:  transparent (background)"
background-color: transparent;$0
endsnippet

snippet background "background-image:  none (background)"
background-image: none;$0
endsnippet

snippet background "background-image:  url (background)"
background-image: url($1);$0
endsnippet

snippet background "background-position:  position (background)"
background-position: ${1:top left/top center/top right/center left/center center/center right/bottom left/bottom center/bottom right/x-% y-%/x-pos y-pos};$0
endsnippet

snippet background "background-repeat:  r:r-x:r-y:n-r (background)"
background-repeat: ${1:repeat/repeat-x/repeat-y/no-repeat};$0
endsnippet

snippet background "background:  color image repeat attachment position (background)"
background:${6: #${1:DDD}} url($2) ${3:repeat/repeat-x/repeat-y/no-repeat} ${4:scroll/fixed} ${5:top left/top center/top right/center left/center center/center right/bottom left/bottom center/bottom right/x-% y-%/x-pos y-pos};$0
endsnippet

snippet border "border-bottom-color: size style color (border)"
border-bottom-color: #${1:999};$0
endsnippet

snippet border "border-bottom-style: size style color (border)"
border-bottom-style: ${1:none/hidden/dotted/dashed/solid/double/groove/ridge/inset/outset};$0
endsnippet

snippet border "border-bottom-width: size style color (border)"
border-bottom-width: ${1:1}px ${2:solid} #${3:999};$0
endsnippet

snippet border "border-bottom: size style color (border)"
border-bottom: ${1:1}px ${2:solid} #${3:999};$0
endsnippet

snippet border "border-color: color (border)"
border-color: ${1:999};$0
endsnippet

snippet border "border-left-color: color (border)"
border-right-color: #${1:999};$0
endsnippet

snippet border "border-left-style: style (border)"
border-left-style: ${1:none/hidden/dotted/dashed/solid/double/groove/ridge/inset/outset};$0
endsnippet

snippet border "border-left-width: size (border)"
border-left-width: ${1:1}px
endsnippet

snippet border "border-left: size style color (border)"
border-left: ${1:1}px ${2:solid} #${3:999};$0
endsnippet

snippet border "border-right-color: color (border)"
border-right-color: #${1:999};$0
endsnippet

snippet border "border-right-style: style (border)"
border-right-style: ${1:none/hidden/dotted/dashed/solid/double/groove/ridge/inset/outset};$0
endsnippet

snippet border "border-right-width: size (border)"
border-right-width: ${1:1}px
endsnippet

snippet border "border-right: size style color (border)"
border-right: ${1:1}px ${2:solid} #${3:999};$0
endsnippet

snippet border "border-style: style (border)"
border-style: ${1:none/hidden/dotted/dashed/solid/double/groove/ridge/inset/outset};$0
endsnippet

snippet border "border-top-color: color (border)"
border-top-color: #${1:999};$0
endsnippet

snippet border "border-top-style: style (border)"
border-top-style: ${1:none/hidden/dotted/dashed/solid/double/groove/ridge/inset/outset};$0
endsnippet

snippet border "border-top-width: size (border)"
border-top-width: ${1:1}px
endsnippet

snippet border "border-top: size style color (border)"
border-top: ${1:1}px ${2:solid} #${3:999};$0
endsnippet

snippet border "border-width: width (border)"
border-width: ${1:1px};$0
endsnippet

snippet border "border:   size style color (border)"
border: ${1:1px} ${2:solid} #${3:999};$0
endsnippet

snippet clear "clear: value (clear)"
clear: ${1:left/right/both/none};$0
endsnippet

snippet color "color:  color-hex (color)"
color: #${1:DDD};$0
endsnippet

snippet color "color:  color-name (color)"
color: ${1:red};$0
endsnippet

snippet color "color:  color-rgb (color)"
color: rgb(${1:255},${2:255},${3:255});$0
endsnippet

snippet cursor "cursor: type (cursor)"
cursor: ${1:default/auto/crosshair/pointer/move/*-resize/text/wait/help};$0
endsnippet

snippet cursor "cursor: url (cursor)"
cursor: url($1);$0
endsnippet

snippet direction "direction: ltr|rtl (direction)"
direction: ${1:ltr|rtl};$0
endsnippet

snippet display "display: block (display)"
display: block;$0
endsnippet

snippet display "display: common-types (display)"
display: ${1:none/inline/block/list-item/run-in/compact/marker};$0
endsnippet

snippet display "display: inline (display)"
display: inline;$0
endsnippet

snippet display "display: table-types (display)"
display: ${1:table/inline-table/table-row-group/table-header-group/table-footer-group/table-row/table-column-group/table-column/table-cell/table-caption};$0
endsnippet

snippet float "float: left:right:none (float)"
float: ${1:left/right/none};$0
endsnippet

snippet font "font-family:   family (font)"
font-family: ${1:Arial, "MS Trebuchet"}, ${2:sans-}serif;$0
endsnippet

snippet font "font-size: size (font)"
font-size: ${1:100%};$0
endsnippet

snippet font "font-style:   normal:italic:oblique (font)"
font-style: ${1:normal/italic/oblique};$0
endsnippet

snippet font "font-variant:   normal:small-caps (font)"
font-variant: ${1:normal/small-caps};$0
endsnippet

snippet font "font-weight: weight (font)"
font-weight: ${1:normal/bold};$0
endsnippet

snippet font "font:   style variant weight size:line-height font -family (font)"
font: ${1:normal/italic/oblique} ${2:normal/small-caps} ${3:normal/bold} ${4:1em/1.5em} ${5:Arial}, ${6:sans-}serif;$0
endsnippet

snippet font "font: size font (font)"
font: ${1:75%} ${2:"Lucida Grande", "Trebuchet MS", Verdana,} ${3:sans-}serif;$0
endsnippet

snippet letter "letter-spacing:   length-em (letter)"
letter-spacing: $1em;$0
endsnippet

snippet letter "letter-spacing:   length-px (letter)"
letter-spacing: $1px;$0
endsnippet

snippet list "list-style-image: url (list)"
list-style-image: url($1);$0
endsnippet

snippet list "list-style-position: pos (list)"
list-style-position: ${1:inside/outside};$0
endsnippet

snippet list "list-style-type: asian (list)"
list-style-type: ${1:cjk-ideographic/hiragana/katakana/hiragana-iroha/katakana-iroha};$0
endsnippet

snippet list "list-style-type: marker(list)"
list-style-type: ${1:none/disc/circle/square};$0
endsnippet

snippet list "list-style-type: numeric (list)"
list-style-type: ${1:decimal/decimal-leading-zero/zero};$0
endsnippet

snippet list "list-style-type: other (list)"
list-style-type: ${1:hebrew/armenian/georgian};$0
endsnippet

snippet list "list-style-type: roman-alpha-greek (list)"
list-style-type: ${1:lower-roman/upper-roman/lower-alpha/upper-alpha/lower-greek/lower-latin/upper-latin};$0
endsnippet

snippet list "list-style: type position image (list)"
list-style: ${1:none/disc/circle/square/decimal/zero} ${2:inside/outside} url($3);$0
endsnippet

snippet margin "margin-bottom: length (margin)"
margin-bottom: ${1:20px};$0
endsnippet

snippet margin "margin-left: length (margin)"
margin-left: ${1:20px};$0
endsnippet

snippet margin "margin-right: length (margin)"
margin-right: ${1:20px};$0
endsnippet

snippet margin "margin-top: length (margin)"
margin-top: ${1:20px};$0
endsnippet

snippet margin "margin:   all (margin)"
margin: ${1:20px};$0
endsnippet

snippet margin "margin: T R B L (margin)"
margin: ${1:20px} ${2:0px} ${3:40px} ${4:0px};$0
endsnippet

snippet margin "margin: V H (margin)"
margin: ${1:20px} ${2:0px};$0
endsnippet

snippet marker "marker-offset: auto (marker)"
marker-offset: auto;$0
endsnippet

snippet marker "marker-offset: length (marker)"
marker-offset: ${1:10px};$0
endsnippet

snippet overflow "overflow: type (overflow)"
overflow: ${1:visible/hidden/scroll/auto};$0
endsnippet

snippet padding "padding-bottom: length (margin)"
padding-bottom: ${1:20px};$0
endsnippet

snippet padding "padding-left: length (margin)"
padding-left: ${1:20px};$0
endsnippet

snippet padding "padding-right: length (margin)"
padding-right: ${1:20px};$0
endsnippet

snippet padding "padding-top: length (margin)"
padding-top: ${1:20px};$0
endsnippet

snippet padding "padding:   T R B L (padding)"
padding: ${1:20px} ${2:0px} ${3:40px} ${4:0px};$0
endsnippet

snippet padding "padding:   V H (padding)"
padding: ${1:20px} ${2:0px};$0
endsnippet

snippet padding "padding:   all (padding)"
padding: ${1:20px};$0
endsnippet

snippet position "position: type (position)"
position: ${1:static/relative/absolute/fixed};$0
endsnippet

snippet { "properties { } ( } )"
{
	/* $1 */
	$0

endsnippet

snippet scrollbar "scrollbar"
scrollbar-base-color:       ${1:#CCCCCC};${2:
scrollbar-arrow-color:      ${3:#000000};
scrollbar-track-color:      ${4:#999999};
scrollbar-3dlight-color:    ${5:#EEEEEE};
scrollbar-highlight-color:  ${6:#FFFFFF};
scrollbar-face-color:       ${7:#CCCCCC};
scrollbar-shadow-color:     ${9:#999999};
scrollbar-darkshadow-color: ${8:#666666};}
endsnippet

snippet selection "selection"
$1::-moz-selection,
$1::selection {
	color: ${2:inherit};
	background: ${3:inherit};
}
endsnippet

snippet text "text-align: left:center:right (txt)"
text-align: ${1:left/right/center/justify};$0
endsnippet

snippet text "text-decoration: none:underline:overline:line-through:blink (text)"
text-decoration: ${1:none/underline/overline/line-through/blink};$0
endsnippet

snippet text "text-indent: length (text)"
text-indent: ${1:10}px;$0
endsnippet

snippet text "text-transform: capitalize:upper:lower (text)"
text-transform: ${1:capitalize/uppercase/lowercase};$0
endsnippet

snippet vertical "vertical-align: type (vertical)"
vertical-align: ${1:baseline/sub/super/top/text-top/middle/bottom/text-bottom/length/%};$0
endsnippet

snippet visibility "visibility: type (visibility)"
visibility: ${1:visible/hidden/collapse};$0
endsnippet

snippet white "white-space:  normal:pre:nowrap (white)"
white-space: ${1:normal/pre/nowrap};$0
endsnippet

snippet word "word-spacing:  length (word)"
word-spacing: ${1:10px};$0
endsnippet

snippet z "z-index: index (z)"
z-index: $1;$0
endsnippet

# vim:ft=snippets:
