"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.activate = void 0;
const coc_nvim_1 = require("coc.nvim");
const DEFAULT_FILETYPES = [
    "css",
    "less",
    "postcss",
    "scss",
    "sugarss",
    "vue",
    "wxss",
];
async function activate(context) {
    const config = coc_nvim_1.workspace.getConfiguration().get("stylelintplus", {});
    let documentSelector = config.filetypes || DEFAULT_FILETYPES;
    if (config.cssInJs) {
        documentSelector = [
            ...documentSelector,
            "javascript",
            "javascriptreact",
            "typescript",
            "typescriptreact",
        ];
    }
    const serverOptions = {
        args: ["--node-ipc"],
        module: require.resolve("stylelint-lsp"),
        options: {
            cwd: coc_nvim_1.workspace.root,
        },
        transport: coc_nvim_1.TransportKind.ipc,
    };
    const clientOptions = {
        documentSelector,
        diagnosticCollectionName: "stylelintplus",
        outputChannelName: "stylelintplus",
        synchronize: {
            configurationSection: "stylelintplus",
            fileEvents: [
                coc_nvim_1.workspace.createFileSystemWatcher("**/.stylelintignore"),
                coc_nvim_1.workspace.createFileSystemWatcher("**/stylelint.config.js"),
                coc_nvim_1.workspace.createFileSystemWatcher("**/.stylelintrc{,.json,.yaml,.yml,.js}"),
                coc_nvim_1.workspace.createFileSystemWatcher("**/package.json"),
            ],
        },
    };
    const client = new coc_nvim_1.LanguageClient("stylelintplus", "stylelint language server", serverOptions, clientOptions);
    const { subscriptions } = context;
    subscriptions.push(coc_nvim_1.services.registLanguageClient(client));
    subscriptions.push(coc_nvim_1.commands.registerCommand("stylelintplus.applyAutoFixes", async () => {
        const doc = await coc_nvim_1.workspace.document;
        if (!doc) {
            return;
        }
        const textDocument = {
            uri: doc.uri,
            version: doc.version,
        };
        const params = {
            command: "stylelint.applyAutoFixes",
            arguments: [textDocument],
        };
        await client.sendRequest("workspace/executeCommand", params).catch(() => {
            coc_nvim_1.window.showErrorMessage("Failed to apply stylelint fixes to document.", "error");
        });
    }));
}
exports.activate = activate;
